---
- name: ensure Kill Bill dirs exist
  become: true
  file: path={{ item }} state=directory owner={{ tomcat_owner }} group={{ tomcat_group }} mode=u=rwx,g=rx,o=rx
  with_items:
    - "{{ kb_config_dir }}"
    - "{{ kb_plugins_dir }}"
  tags: kpm-install

# Generate Kill Bill placeholder configuration files
- name: generate Kill Bill files
  become: true
  template:
    src: "killbill/{{ item.name }}.j2"
    dest: "{{ kb_config_dir }}/{{ item.name }}"
    mode: u=rw,g=r,o=r
    owner: "{{ tomcat_owner }}"
    group: "{{ tomcat_group }}"
    # If the files already exist, don't clobber them
    force: no
  with_items:
    - name: killbill.properties
  tags: kpm-install

- name: generate kpm.yml file if needed
  become: true
  template:
    src: "killbill/kpm.yml.j2"
    dest: "{{ kb_install_dir }}/kpm.yml"
    mode: u=rw,g=r,o=r
    owner: "{{ tomcat_owner }}"
    group: "{{ tomcat_group }}"
    # If the file already exist, don't clobber it
    force: no
  tags: kpm-install

# Generate Kill Bill-specific Tomcat configuration files based on environment variables
- name: generate Tomcat files
  become: true
  template:
    src: "{{ item.src }}/{{ item.name }}.j2"
    dest: "{{ item.dest }}/{{ item.name }}"
    mode: "{{ item.mode }}"
    owner: "{{ tomcat_owner }}"
    group: "{{ tomcat_group }}"
    # If the files already exist, don't clobber them
    force: no
  with_items:
    - src: killbill/conf
      name: setenv2.sh
      mode: u=rwx,g=rx,o=rx
      dest: "{{ catalina_base }}/bin"
  tags: tomcat

- name: check if a ROOT webapp is already installed
  stat:
    path: "{{ catalina_base }}/{{ kb_webapps }}/ROOT"
  register: existing_webapp
  tags: tomcat

# Only run kpm install if there is no exploded webapp already. Otherwise,
# because we will delete the ROOT.war file below, kpm install won't be idempotent
# and always download the war.
# In practice, this means one cannot just update the version in the kpm.yml file
# to update Kill Bill and re-run the role: one needs to first delete the ROOT directory.
- name: run KPM install
  become: true
  become_user: "{{ tomcat_owner }}"
  killbill:
    kpm_path: "{{ kpm_path }}"
    kpm_yml: "{{ kpm_yml }}"
  when: not existing_webapp.stat.exists
  tags: kpm-install

- name: set correct permissions
  become: true
  file: path={{ kb_install_dir }} owner={{ tomcat_owner }} group={{ tomcat_group }} recurse=yes
  tags: kpm-install

- name: Create ROOT directory to unarchive the WAR
  become: true
  file:
    path: "{{ catalina_base }}/{{ kb_webapps }}/ROOT"
    state: directory
    mode: '0755'

# Expand the WAR to speed up startup
- name: Expand WAR file if not already done
  become: true
  command: |
    "{{ java_home }}/bin/jar" -xf ../ROOT.war
  args:
    chdir: "{{ catalina_base }}/{{ kb_webapps }}/ROOT"
    creates: "{{ catalina_base }}/{{ kb_webapps }}/ROOT/WEB-INF"
  tags: killbill-logback

# Generate logback configuration files based on environment variables
- name: Copy logback.xml
  become: true
  template:
    src: "killbill/{{ item.name }}.j2"
    # Placing the logback.xml on the classpath of the webapp is the only way to support per-webapp configuration
    dest: "{{ catalina_base }}/{{ kb_webapps }}/ROOT/WEB-INF/classes/logback.xml"
    mode: u=rw,g=r,o=r
    owner: "{{ tomcat_owner }}"
    group: "{{ tomcat_group }}"
    force: true
  with_items:
    - name: logback.xml
  tags: killbill-logback

- name: Recursively change ownership for the expanded ROOT
  become: true
  file:
    path: "{{ catalina_base }}/{{ kb_webapps }}/ROOT"
    state: directory
    recurse: yes
    owner: "{{ tomcat_owner }}"
    group: "{{ tomcat_group }}"
    mode: u=rwX,g=rX,o=rX
  tags: killbill-logback

- name: Remove root archive
  become: true
  file:
    path: "{{ catalina_base }}/{{ kb_webapps }}/ROOT.war"
    state: absent
  tags: killbill-logback
